dtails of maven
                 What Is Maven? and its Usage??
ANS ----  Maven is a powerful project management tool that is based on POM (project object model). It is used for projects build, dependency and documentation.
It simplifies the build process.In short terms we can tell maven is a tool that can be used for building and managing any Java-based project.
maven make the day-to-day work of Java developers easier and generally help with the comprehension of any Java-based project.

                 Commands that are Used in maven. And Theirs purposes.
ANS -------   mvn clean: Cleans the project and removes all files generated by the previous build.
mvn compile: Compiles source code of the project.
mvn test-compile: Compiles the test source code.
mvn test: Runs tests for the project.
mvn package: Creates JAR or WAR file for the project to convert it into a distributable format.
mvn install: Deploys the packaged JAR/ WAR file to the local repository.
mvn deploy: Copies the packaged JAR/ WAR file to the remote repository after compiling, running tests and building the project.
 these are some basics maven command that are used in the maven.
 
 
                 Mavans Life Cycle.
here are three built-in build lifecycles: default, clean and site. The default lifecycle handles your project deployment, the clean lifecycle handles project cleaning, 
while the site lifecycle handles the creation of your project's web site.
Each of these build lifecycles is defined by a different list of build phases, wherein a build phase represents a stage in the lifecycle.

the default lifecycle comprises of the following phases:

validate - validate the project is correct and all necessary information is available
compile - compile the source code of the project
test - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package - take the compiled code and package it in its distributable format, such as a JAR.
verify - run any checks on results of integration tests to ensure quality criteria are met
install - install the package into the local repository, for use as a dependency in other projects locally
deploy - done in the build environment, copies the final package to the remote repository for sharing with other developers and projects
